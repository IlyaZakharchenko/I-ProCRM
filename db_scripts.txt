create table application
(
  id bigserial not null
    constraint application_pkey
    primary key,
  content varchar(255),
  status varchar(255),
  theme varchar(255)
)
;

create table app_user
(
  id serial not null
    constraint app_user_pkey
    primary key,
  role varchar(255),
  cookie varchar(255),
  name varchar(255),
  password varchar(255),
  login varchar(255),
  image_url varchar(255),
  uid varchar(255),
  access_right varchar(255)
)
;

create table client
(
  id bigserial not null
    constraint client_pkey
    primary key,
  address varchar(255),
  email varchar(255),
  full_name varchar(255),
  phone_number varchar(255),
  user_id integer
    constraint fkqqdwacidjq73vuxpn95i63b5d
    references app_user
)
;

create table file
(
  id bigserial not null
    constraint file_pkey
    primary key,
  name varchar(255),
  url varchar(255)
)
;

create table application_file
(
  application_id bigint not null
    constraint fkfi9qq0gbuv9xire1wg0w7bbep
    references application,
  file_id bigint not null
    constraint fki9kmv16gr2kir9f6gx46ie7y2
    references file
)
;

create table staff
(
  id bigserial not null
    constraint staff_pkey
    primary key,
  email varchar(255),
  experience varchar(255),
  full_name varchar(255),
  phone_number varchar(255),
  position varchar(255),
  salary integer,
  user_id integer
    constraint fkglar6kf71ibtspi6ru2bjrdsc
    references app_user
)
;

create table tariff
(
  id bigserial not null
    constraint tariff_pkey
    primary key,
  description varchar(255),
  name varchar(255),
  price integer
)
;

create table contract
(
  id bigserial not null
    constraint contract_pkey
    primary key,
  expiration_date date,
  signing_date date,
  client_id bigint
    constraint fklhq3p3xl25vvnfvyfc51ica0j
    references client,
  ip_id bigint
    constraint fkjjmhm6h249pqjs74pqtu8qv4f
    references tariff
)
;

create table persistent_logins
(
  series varchar(64) not null
    constraint persistent_logins_pkey
    primary key,
  last_used timestamp default CURRENT_TIMESTAMP,
  token varchar(64) not null,
  username varchar(64) not null
)
;

create table news
(
  id bigserial not null
    constraint news_pkey
    primary key,
  context text,
  date date,
  header varchar(255)
)
;
create function update_changetimestamp_column()
  returns trigger
language plpgsql
as $$
BEGIN
  NEW.last_used = now();
  RETURN NEW;
END;
$$;

create trigger update_changetimestamp_trigger BEFORE UPDATE OR INSERT ON persistent_logins
  FOR EACH ROW EXECUTE PROCEDURE update_changetimestamp_column();

